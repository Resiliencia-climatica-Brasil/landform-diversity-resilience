var Biome = ee.FeatureCollection("projects/ee-lucasljardim9/assets/Biome");

var resistance = ee.Image("projects/ee-lucasljardim9/assets/Biomas_resistencia_kernel");

print(Biome)

var export_BBox = Biome
                  .map(function(feature){
                         return feature.bounds()
                      })
                  .geometry()
                  .dissolve({'maxError': 1})
                  .bounds();


var connectedness = ee.Image("projects/ee-lucasljardim9/assets/Biomas_resistencia_kernel");

var scale = connectedness.projection().nominalScale();

var calculate_Z_scores = function(image) {
  // Calculate mean and standard deviation
  var mean = image.reduceRegion({
    reducer: ee.Reducer.mean(),
    scale: scale,
    bestEffort: true
  });//print('Global Mean', mean);

  var sd = image.reduceRegion({
    reducer: ee.Reducer.stdDev(),
    scale: scale,
    bestEffort: true
  });// print('Global sd', sd)

  // Extract the mean and standard deviation values from the dictionaries into a raster
var meanValue = ee.Image.constant(mean
                                  .values()
                                  .get(0));
                                  //print('mean Dictionary', meanValue);
                                  
  var sdValue = ee.Image.constant(sd
                                  .values()
                                  .get(0));
                                  //print('sd dictionary', sdValue);

  // Calculate z for the current image
  var z = image.subtract(meanValue).divide(sdValue);

  // Return the z image
  return z.rename('z');
};
*/

var Z_connectedness = calculate_Z_scores(connectedness).multiply(-1);

print(Z_connectedness)
/*
Export.image.toAsset({image: Z_connectedness, 
                     description:"Z_connectedness",
                     assetId: "projects/ee-lucasljardim9/assets/Z_connectedness", 
                     pyramidingPolicy: "median", 
                     region: export_BBox, 
                     scale: scale,
                     maxPixels: 1e13});
*/